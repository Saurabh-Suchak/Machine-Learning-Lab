# -*- coding: utf-8 -*-
"""Kmeans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dwmngF1mUWhRG5MjaFHqSKz05Vkt2pgm
"""

import math
x = [1.0,1.5,3.0,5.0,3.5,4.5,3.5]
y = [1.0,2.0,4.0,7.0,5.0,5.0,4.5]

def ecludian_dist(x1,y1,x2,y2):
  dist=math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1))
  return dist

def k_mean(k,x,y):
  initial_centroid=[]
  for i in range(k):
    initial_centroid.append([x[i],y[i]])
  while(1):
    cluster_list=[]
    for j in range(len(x)):
      cluster=0;
      min=ecludian_dist(initial_centroid[0][0],initial_centroid[0][1],x[j],y[j]);
      for i in range(k):
        if(ecludian_dist(initial_centroid[i][0],initial_centroid[i][1],x[j],y[j])<min):
          min=ecludian_dist(initial_centroid[i][0],initial_centroid[i][1],x[j],y[j])
          cluster=i;
      cluster_list.append(cluster)
    new_centroid=[]
    for i in range(k):
      new_meanx=0;
      new_meany=0;
      n=0;
      for j in range(len(cluster_list)):
        if i==cluster_list[j]:
          new_meanx=new_meanx+x[j]
          new_meany=new_meany+y[j]
          n=n+1;
      new_centroid.append([new_meanx/n,new_meany/n])
    if(new_centroid==initial_centroid):
      return cluster_list
      break
    else:
      initial_centroid=new_centroid

from prettytable import PrettyTable
k=int(input('enter a k value : '))
list1 =k_mean(k,x,y)


table = PrettyTable()
table.field_names = ["X", "Y", "Cluster"]
for i in range(len(x)):
  table.add_row([x[i],y[i],"cluster "+ str(list1[i])])
print(table)

import matplotlib.pyplot as plt
color=['red','blue','green','cyan','purple','orange','yellow','black','brown']
for i in range(k):
  x1=[]
  y1=[]
  for j in range(len(list1)):
    if(list1[j]==i):
      x1.append(x[j])
      y1.append(y[j])
  plt.scatter(x1,y1, marker="x",color=color[i])

plt.show()